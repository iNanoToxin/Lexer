insert_log = function() end
_G.Key = "KEY_HERE"
_G.Code
local function a(b, c, ...)
    local d = 1
    local e
    b = string.gsub(string.sub(b, 5), "..", function(f)
        if string.byte(f, 2) == 79 then
            e = tonumber(string.sub(f, 1, 1))
            return ""
        else
            local g = string.char(tonumber(f, 16))
            if e then
                local h = string.rep(g, e)
                e = nil
                return h
            else
                return g
            end
        end
    end)
    local function i(j, k, l)
        if l then
            local m = j / 2 ^ (k - 1) % 2 ^ (l - 1 - (k - 1) + 1)
            return m - m % 1
        else
            local n = 2 ^ (k - 1)
            return j % (n + n) >= n and 1 or 0
        end
    end
    local function o()
        local p = string.byte(b, d, d)
        d = d + 1
        return p
    end
    local function q()
        local r, s = string.byte(b, d, d + 2)
        d = d + 2
        return s * 256 + r
    end
    local function t()
        local u, v, w, x = string.byte(b, d, d + 3)
        d = d + 4
        return x * 16777216 + w * 65536 + v * 256 + u
    end
    local function y()
        local z = t()
        local A = t()
        local B = 1
        local C = i(A, 1, 20) * 4294967296.000000 + z
        local D = i(A, 21, 31)
        local E = i(A, 32) == 1 and -1 or 1
        if D == 0 then
            if C == 0 then
                return E * 0
            else
                D = 1
                B = 0
            end
        elseif D == 2047 then
            return C == 0 and E * 1 / 0 or E * NaN
        end
        return math.ldexp(E, D - 1023) * (B + C / 4503599627370496.000000)
    end
    local function F(G)
        if not G then
            G = t()
            if G == 0 then
                return ""
            end
        end
        d = d + G
        return string.sub(b, d - G, d - 1)
    end
    local function H(...)
        return {...}, select("#", ...)
    end
    local function I()
        local J = {}
        local K = {}
        local L = {}
        local M = {
            J,
            K,
            nil,
            L
        }
        local N = t()
        local O = {}
        for P = 1, N do
            local Q = o()
            local R
            if Q == 1 then
                R = o() ~= 0
            else
                if Q == 2 then
                    R = y()
                elseif Q == 3 then
                    R = F()
                end
            end
            O[P] = R
        end
        M[3] = o()
        for S = 1, t() do
            local T = o()
            if i(T, 1, 1) == 0 then
                local U = i(T, 2, 3)
                local V = i(T, 4, 6)
                local W = {
                    q(),
                    q(),
                    nil,
                    nil
                }
                if U == 0 then
                    W[3] = q()
                    W[4] = q()
                else
                    if U == 1 then
                        W[3] = t()
                    elseif U == 2 then
                        W[3] = t() - 65536.000000
                    elseif U == 3 then
                        W[3] = t() - 65536.000000
                        W[4] = q()
                    end
                end
                if i(V, 1, 1) == 1 then
                    W[2] = O[W[2]]
                end
                if i(V, 2, 2) == 1 then
                    W[3] = O[W[3]]
                end
                if i(V, 3, 3) == 1 then
                    W[4] = O[W[4]]
                end
                J[S] = W
            end
        end
        for X = 1, t() do
            K[X - 1] = I()
        end
        return M
    end
    local function Y(Z, aa, ab)
        return function(...)
            local ac = 1
            local ad = -1
            local ae = {}
            local af = {...}
            local ag = {}
            local ah = {}
            for ai = 0, select("#", ...) - 1 do
                if ai >= Z[3] then
                    ae[ai - Z[3]] = af[ai + 1]
                else
                    ah[ai] = af[ai + 1]
                end
            end
            local aj
            local ak
            while true do
                aj = Z[1][ac]
                ak = Z[1][ac][1]
                if Z[1][ac][1] <= 55 then
                    if ak <= 27 then
                        if ak <= 13 then
                            if ak <= 6 then
                                if ak <= 2 then
                                    if ak <= 0 then
                                        ah[aj[2]] = ah[aj[3]] + aj[4]
                                    else
                                        if ak > 1 then
                                            local al
                                            local am = {}
                                            al = setmetatable({}, {
                                                ["__index"] = function(an, ao)
                                                    return am[ao][1][am[ao][2]]
                                                end,
                                                ["__newindex"] = function(ap, aq, ar)
                                                    am[aq][1][am[aq][2]] = ar
                                                end
                                            })
                                            for as = 1, aj[4] do
                                                ac = ac + 1
                                                if Z[1][ac][1] == 71 then
                                                    am[as - 1] = {
                                                        ah,
                                                        Z[1][ac][3]
                                                    }
                                                else
                                                    am[as - 1] = {
                                                        aa,
                                                        Z[1][ac][3]
                                                    }
                                                end
                                                ag[#ag + 1] = am
                                            end
                                            ah[aj[2]] = Y(Z[2][aj[3]], al, ab)
                                        else
                                            if ah[aj[2]] ~= ah[aj[4]] then
                                                ac = ac + 1
                                            else
                                                ac = aj[3]
                                            end
                                        end
                                    end
                                else
                                    if ak <= 4 then
                                        if ak > 3 then
                                            return
                                        else
                                            ah[aj[2]] = aj[3] * ah[aj[4]]
                                        end
                                    else
                                        if ak == 5 then
                                            return table.unpack(ah, aj[2], aj[2] + aj[3])
                                        else
                                            if ah[aj[2]] == ah[aj[4]] then
                                                ac = ac + 1
                                            else
                                                ac = aj[3]
                                            end
                                        end
                                    end
                                end
                            else
                                if ak <= 9 then
                                    if ak <= 7 then
                                        ah[aj[2]] = ah[aj[3]][ah[aj[4]]]
                                    elseif ak == 8 then
                                        ah[aj[2] + 1] = ah[aj[3]]
                                        ah[aj[2]] = ah[aj[3]][aj[4]]
                                    else
                                        if aj[2] < ah[aj[4]] then
                                            ac = ac + 1
                                        else
                                            ac = aj[3]
                                        end
                                    end
                                else
                                    if ak <= 11 then
                                        if ak == 10 then
                                            local at
                                            local au = {}
                                            at = setmetatable({}, {
                                                __index = function(av, aw)
                                                    return au[aw][1][au[aw][2]]
                                                end,
                                                __newindex = function(ax, ay, az)
                                                    au[ay][1][au[ay][2]] = az
                                                end
                                            })
                                            for aA = 1, aj[4] do
                                                ac = ac + 1
                                                if Z[1][ac][1] == 71 then
                                                    au[aA - 1] = {
                                                        ah,
                                                        Z[1][ac][3]
                                                    }
                                                else
                                                    au[aA - 1] = {
                                                        aa,
                                                        Z[1][ac][3]
                                                    }
                                                end
                                                ag[#ag + 1] = au
                                            end
                                            ah[aj[2]] = Y(Z[2][aj[3]], at, ab)
                                        else
                                            for aB = aj[2] + 1, aj[3] do
                                                table.insert(ah[aj[2]], ah[aB])
                                            end
                                        end
                                    elseif ak > 12 then
                                        ah[aj[2]] = aj[3] ~= 0
                                    elseif ah[aj[2]] ~= ah[aj[4]] then
                                        ac = ac + 1
                                    else
                                        ac = aj[3]
                                    end
                                end
                            end
                        else
                            if ak <= 20 then
                                if ak <= 16 then
                                    if ak <= 14 then
                                        ah[aj[2]](ah[aj[2] + 1])
                                    elseif ak > 15 then
                                        ac = aj[3]
                                    else
                                        ah[aj[2]] = ah[aj[3]][ah[aj[4]]]
                                    end
                                else
                                    if ak <= 18 then
                                        if ak > 17 then
                                            ah[aj[2]] = aj[3]
                                        elseif not ah[aj[2]] then
                                            ac = ac + 1
                                        else
                                            ac = aj[3]
                                        end
                                    elseif ak > 19 then
                                        ah[aj[2]] = #ah[aj[3]]
                                    else
                                        ah[aj[2]] = ah[aj[3]] + ah[aj[4]]
                                    end
                                end
                            else
                                if ak <= 23 then
                                    if ak <= 21 then
                                        ah[aj[2]] = ah[aj[2]](table.unpack(ah, aj[2] + 1, ad))
                                    else
                                        if ak == 22 then
                                            if ah[aj[2] + 2] > 0 then
                                                if ah[aj[2]] > ah[aj[2] + 1] then
                                                    ac = aj[3]
                                                else
                                                    ah[aj[2] + 3] = ah[aj[2]]
                                                end
                                            elseif ah[aj[2]] < ah[aj[2] + 1] then
                                                ac = aj[3]
                                            else
                                                ah[aj[2] + 3] = ah[aj[2]]
                                            end
                                        else
                                            ah[aj[2]] = aj[3] ~= 0
                                            ac = ac + 1
                                        end
                                    end
                                else
                                    if ak <= 25 then
                                        if ak > 24 then
                                            ah[aj[2]] = aa[aj[3]]
                                        else
                                            ah[aj[2]](table.unpack(ah, aj[2] + 1, aj[3]))
                                        end
                                    elseif ak == 26 then
                                        ah[aj[2]] = ah[aj[3]] * ah[aj[4]]
                                    else
                                        ah[aj[2]] = ah[aj[3]] - ah[aj[4]]
                                    end
                                end
                            end
                        end
                    else
                        if ak <= 41 then
                            if ak <= 34 then
                                if ak <= 30 then
                                    if ak <= 28 then
                                        local aC = ah[aj[2]] + ah[aj[2] + 2]
                                        ah[aj[2]] = aC
                                        if ah[aj[2] + 2] > 0 then
                                            if aC <= ah[aj[2] + 1] then
                                                ac = aj[3]
                                                ah[aj[2] + 3] = aC
                                            end
                                        elseif aC >= ah[aj[2] + 1] then
                                            ac = aj[3]
                                            ah[aj[2] + 3] = aC
                                        end
                                    else
                                        if ak > 29 then
                                            ah[aj[2]] = ah[aj[3]] * aj[4]
                                        else
                                            for aD = aj[2], aj[3] do
                                                ah[aD] = nil
                                            end
                                        end
                                    end
                                elseif ak <= 32 then
                                    if ak == 31 then
                                        for aE = aj[2] + 1, ad do
                                            table.insert(ah[aj[2]], ah[aE])
                                        end
                                    else
                                        ah[aj[2]] = aj[3] ~= 0
                                        ac = ac + 1
                                    end
                                elseif ak == 33 then
                                    ah[aj[2]][aj[3]] = ah[aj[4]]
                                else
                                    for aF = aj[2], aj[3] do
                                        ah[aF] = nil
                                    end
                                end
                            elseif ak <= 37 then
                                if ak <= 35 then
                                    return ah[aj[2]]
                                else
                                    if ak > 36 then
                                        local aG = {
                                            ah[aj[2]](ah[aj[2] + 1])
                                        }
                                        local aH = 0
                                        for aI = aj[2], aj[4] do
                                            aH = aH + 1
                                            ah[aI] = aG[aH]
                                        end
                                    else
                                        if ah[aj[2]] then
                                            ac = ac + 1
                                        else
                                            ac = aj[3]
                                        end
                                    end
                                end
                            else
                                if ak <= 39 then
                                    if ak == 38 then
                                        for aJ = 1, aj[3] do
                                            ah[aj[2]][aJ] = ah[aj[2] + aJ]
                                        end
                                    else
                                        local aK, aL = H(ah[aj[2]](table.unpack(ah, aj[2] + 1, aj[3])))
                                        ad = aL + aj[2] - 1
                                        local aM = 0
                                        for aN = aj[2], ad do
                                            aM = aM + 1
                                            ah[aN] = aK[aM]
                                        end
                                    end
                                else
                                    if ak == 40 then
                                        if ah[aj[2]] ~= aj[4] then
                                            ac = ac + 1
                                        else
                                            ac = aj[3]
                                        end
                                    else
                                        ah[aj[2]][aj[3]] = ah[aj[4]]
                                    end
                                end
                            end
                        elseif ak <= 48 then
                            if ak <= 44 then
                                if ak <= 42 then
                                    if not ah[aj[2]] then
                                        ac = ac + 1
                                    else
                                        ac = aj[3]
                                    end
                                else
                                    if ak > 43 then
                                        for aO = 1, aj[3] do
                                            ah[aj[2]][aO] = ah[aj[2] + aO]
                                        end
                                    else
                                        ah[aj[2]] = aj[3]
                                    end
                                end
                            elseif ak <= 46 then
                                if ak == 45 then
                                    ah[aj[2]] = ah[aj[3]] - aj[4]
                                else
                                    local aP = ah[aj[3]]
                                    for aQ = aj[3] + 1, aj[4] do
                                        aP = aP .. ah[aQ]
                                    end
                                    ah[aj[2]] = aP
                                end
                            elseif ak > 47 then
                                if not ah[aj[4]] then
                                    ac = ac + 1
                                else
                                    ah[aj[2]] = ah[aj[4]]
                                    ac = aj[3]
                                end
                            else
                                ab[aj[3]] = ah[aj[2]]
                            end
                        else
                            if ak <= 51 then
                                if ak <= 49 then
                                    ah[aj[2]] = ab[aj[3]]
                                elseif ak > 50 then
                                    local aR = ah[aj[2]] + ah[aj[2] + 2]
                                    ah[aj[2]] = aR
                                    if ah[aj[2] + 2] > 0 then
                                        if aR <= ah[aj[2] + 1] then
                                            ac = aj[3]
                                            ah[aj[2] + 3] = aR
                                        end
                                    else
                                        if aR >= ah[aj[2] + 1] then
                                            ac = aj[3]
                                            ah[aj[2] + 3] = aR
                                        end
                                    end
                                else
                                    if ah[aj[2]] ~= aj[4] then
                                        ac = ac + 1
                                    else
                                        ac = aj[3]
                                    end
                                end
                            elseif ak <= 53 then
                                if ak == 52 then
                                    ah[aj[2] + 1] = ah[aj[3]]
                                    ah[aj[2]] = ah[aj[3]][aj[4]]
                                else
                                    ah[aj[2]] = ah[aj[3]] - ah[aj[4]]
                                end
                            elseif ak > 54 then
                                ah[aj[2]] = {}
                            else
                                ah[aj[2]] = aj[3] ^ ah[aj[4]]
                            end
                        end
                    end
                elseif Z[1][ac][1] <= 83 then
                    if ak <= 69 then
                        if ak <= 62 then
                            if ak <= 58 then
                                if ak <= 56 then
                                    ah[aj[2]] = aj[3] ^ ah[aj[4]]
                                elseif ak == 57 then
                                    ah[aj[2]][ah[aj[3]]] = ah[aj[4]]
                                else
                                    ah[aj[2]] = ah[aj[2]](table.unpack(ah, aj[2] + 1, aj[3]))
                                end
                            elseif ak <= 60 then
                                if ak > 59 then
                                    ah[aj[2]] = ah[aj[3]] / ah[aj[4]]
                                else
                                    ah[aj[2]] = ah[aj[2]]()
                                end
                            elseif ak > 61 then
                                if ah[aj[2]] == aj[4] then
                                    ac = ac + 1
                                else
                                    ac = aj[3]
                                end
                            else
                                ah[aj[2]] = Y(Z[2][aj[3]], nil, ab)
                            end
                        else
                            if ak <= 65 then
                                if ak <= 63 then
                                    ah[aj[2]][aj[3]] = aj[4]
                                else
                                    if ak == 64 then
                                        ah[aj[2]] = ah[aj[3]] * ah[aj[4]]
                                    else
                                        ah[aj[2]] = aa[aj[3]]
                                    end
                                end
                            else
                                if ak <= 67 then
                                    if ak == 66 then
                                        if ah[aj[2]] == aj[4] then
                                            ac = ac + 1
                                        else
                                            ac = aj[3]
                                        end
                                    else
                                        ah[aj[2]] = Y(Z[2][aj[3]], nil, ab)
                                    end
                                else
                                    if ak == 68 then
                                        ah[aj[2]] = ah[aj[2]](ah[aj[2] + 1])
                                    else
                                        if aj[2] < ah[aj[4]] then
                                            ac = ac + 1
                                        else
                                            ac = aj[3]
                                        end
                                    end
                                end
                            end
                        end
                    else
                        if ak <= 76 then
                            if ak <= 72 then
                                if ak <= 70 then
                                    ah[aj[2]] = ah[aj[2]]()
                                elseif ak > 71 then
                                    if ah[aj[2] + 2] > 0 then
                                        if ah[aj[2]] > ah[aj[2] + 1] then
                                            ac = aj[3]
                                        else
                                            ah[aj[2] + 3] = ah[aj[2]]
                                        end
                                    else
                                        if ah[aj[2]] < ah[aj[2] + 1] then
                                            ac = aj[3]
                                        else
                                            ah[aj[2] + 3] = ah[aj[2]]
                                        end
                                    end
                                else
                                    ah[aj[2]] = ah[aj[3]]
                                end
                            else
                                if ak <= 74 then
                                    if ak == 73 then
                                        local aS, aT = H(ah[aj[2]](table.unpack(ah, aj[2] + 1, aj[3])))
                                        ad = aT + aj[2] - 1
                                        local aU = 0
                                        for aV = aj[2], ad do
                                            aU = aU + 1
                                            ah[aV] = aS[aU]
                                        end
                                    else
                                        ah[aj[2]] = ah[aj[3]] / ah[aj[4]]
                                    end
                                else
                                    if ak == 75 then
                                        ah[aj[2]] = ah[aj[3]] % aj[4]
                                    else
                                        local aW = aj[2] + 2
                                        local aX = {
                                            ah[aj[2]](ah[aj[2] + 1], ah[aW])
                                        }
                                        for aY = 1, aj[4] do
                                            ah[aW + aY] = aX[aY]
                                        end
                                        if aX[1] then
                                            ah[aW] = aX[1]
                                            ac = aj[3]
                                        else
                                            ac = ac + 1
                                        end
                                    end
                                end
                            end
                        else
                            if ak <= 79 then
                                if ak <= 77 then
                                    ah[aj[2]] = aj[3] + ah[aj[4]]
                                else
                                    if ak > 78 then
                                        ah[aj[2]] = ah[aj[2]](table.unpack(ah, aj[2] + 1, aj[3]))
                                    else
                                        ah[aj[2]] = ah[aj[3]]
                                    end
                                end
                            elseif ak <= 81 then
                                if ak == 80 then
                                    ah[aj[2]] = ah[aj[3]] * aj[4]
                                else
                                    ah[aj[2]] = ah[aj[3]] + aj[4]
                                end
                            elseif ak > 82 then
                                if ah[aj[2]] then
                                    ac = ac + 1
                                else
                                    ac = aj[3]
                                end
                            else
                                ah[aj[2]] = aj[3] + ah[aj[4]]
                            end
                        end
                    end
                else
                    if ak <= 97 then
                        if ak <= 90 then
                            if ak <= 86 then
                                if ak <= 84 then
                                    ah[aj[2]][aj[3]] = aj[4]
                                elseif ak > 85 then
                                    ah[aj[2]] = aj[3] ~= 0
                                else
                                    ah[aj[2]] = #ah[aj[3]]
                                end
                            elseif ak <= 88 then
                                if ak == 87 then
                                    ah[aj[2]] = ah[aj[3]] ^ aj[4]
                                else
                                    ah[aj[2]](table.unpack(ah, aj[2] + 1, aj[3]))
                                end
                            else
                                if ak > 89 then
                                    local aZ = aj[2] + 2
                                    local ba = {
                                        ah[aj[2]](ah[aj[2] + 1], ah[aZ])
                                    }
                                    for bb = 1, aj[4] do
                                        ah[aZ + bb] = ba[bb]
                                    end
                                    if ba[1] then
                                        ah[aZ] = ba[1]
                                        ac = aj[3]
                                    else
                                        ac = ac + 1
                                    end
                                else
                                    ac = aj[3]
                                end
                            end
                        elseif ak <= 93 then
                            if ak <= 91 then
                                ah[aj[2]] = ah[aj[3]] ^ aj[4]
                            else
                                if ak == 92 then
                                    ah[aj[2]] = ah[aj[3]][aj[4]]
                                else
                                    ah[aj[2]] = ah[aj[2]](ah[aj[2] + 1])
                                end
                            end
                        else
                            if ak <= 95 then
                                if ak > 94 then
                                    return ah[aj[2]]
                                else
                                    local bc = ah[aj[3]]
                                    for bd = aj[3] + 1, aj[4] do
                                        bc = bc .. ah[bd]
                                    end
                                    ah[aj[2]] = bc
                                end
                            elseif ak == 96 then
                                return
                            else
                                ah[aj[2]] = ah[aj[3]] % aj[4]
                            end
                        end
                    else
                        if ak <= 104 then
                            if ak <= 100 then
                                if ak <= 98 then
                                    for be = aj[2] + 1, ad do
                                        table.insert(ah[aj[2]], ah[be])
                                    end
                                else
                                    if ak > 99 then
                                        ah[aj[2]](ah[aj[2] + 1])
                                    else
                                        ah[aj[2]] = ah[aj[2]](table.unpack(ah, aj[2] + 1, ad))
                                    end
                                end
                            elseif ak <= 102 then
                                if ak == 101 then
                                    if ah[aj[2]] == ah[aj[4]] then
                                        ac = ac + 1
                                    else
                                        ac = aj[3]
                                    end
                                else
                                    ah[aj[2]] = {}
                                end
                            else
                                if ak > 103 then
                                    ah[aj[2]] = ab[aj[3]]
                                else
                                    ah[aj[2]] = ah[aj[3]] - aj[4]
                                end
                            end
                        else
                            if ak <= 107 then
                                if ak <= 105 then
                                    ah[aj[2]] = ah[aj[3]] + ah[aj[4]]
                                else
                                    if ak > 106 then
                                        if not ah[aj[4]] then
                                            ac = ac + 1
                                        else
                                            ah[aj[2]] = ah[aj[4]]
                                            ac = aj[3]
                                        end
                                    else
                                        ah[aj[2]] = aj[3] * ah[aj[4]]
                                    end
                                end
                            elseif ak <= 109 then
                                if ak > 108 then
                                    ab[aj[3]] = ah[aj[2]]
                                else
                                    ah[aj[2]][ah[aj[3]]] = ah[aj[4]]
                                end
                            elseif ak == 110 then
                                ah[aj[2]] = ah[aj[3]][aj[4]]
                            else
                                local bf = {
                                    ah[aj[2]](ah[aj[2] + 1])
                                }
                                local bg = 0
                                for bh = aj[2], aj[4] do
                                    bg = bg + 1
                                    ah[bh] = bf[bg]
                                end
                            end
                        end
                    end
                end
                ac = ac + 1
            end
        end
    end
    return Y(I(), {}, c)()
end
pcall = function() end
return a(_G.Code, _G)